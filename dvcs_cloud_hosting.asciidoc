== DVCS Cloud Hosting

One of the nice things about using a DVCS is that there are a number
of very mature cloud hosting services that can be used to host your
code. These services provide an easy way to share project files with
team members as well as tools for managing those
projects. Many of these services will in addition to hosting a GIT or
HG repository will also include features like a wiki or issue tracker
that are not directly related to the DVCS but can be very useful for
management of a project.

In addition using a cloud hosting service provides an automatic off
site backup, which can provide an important level of safety for a
small company that might not have procedures in place for backups or
disaster recovery. 



=== GitHub

The 10,000 pound gorilla of the DVCS hosting world is GitHub. This is
for a good reason, GitHub has been leading the effort to create new
and innovative features for collaborative development. In addition
GitHub has  become the social network for programmers, and
the central place for open source development, having taken that crown from
Soruceforge several years ago.

NOTE: Several people from GitHub provided suggestions and support for
the writing of this book. 

GitHub has become a leader in the field for a number of reasons. But
one of them is that they practice what they preach. GitHub is very
much a distributed company with people all over the world. So before
they release tools to the world, they have used them internally. In
addition their internal use of these tools is not just the standard
run threw QA testing but actual use when things have to get done. 


==== Community

One of GitHub's goals is to provide a place for community of
developers. There are a huge number of open source projects on GitHub
(Including this book) that can be forked and downloaded. In many ways
GitHub is providing the "View Source" feature for the current decade.

If your goal is to build a public project GitHub can form the natural
home for your project. Placing it on GitHub will allow potential users
to find, follow and contribute to your project. 

TODO: Expand

==== GitHub API and tools

In addition GitHub provides a very robust API that allows developers
to create applications that integrate with GitHub. So for example when
building applications with PhoneGap it is possible to point PhoneGap
at the correct GitHub repository and then have PhoneGap simply pull
the correct files from GitHub.

When you want to use the GitHub API you have to give the application
permission to use it. So the API will also allow access to your
private repositories. 

Since this API is public there is no reason that a developer can use
this to automate part of a work flow. for more details see
xref:github_api[Using the GitHub API].



=== Features

GitHub has an amazing set of features, and between when I write this
and when this book is published they will probably introduce a bunch
more. So this section will not be able to cover all of the features of
GitHub. However there are some highlights to know about.

First of all if you are viewing a file in Markdown or Asciidoc it will
render the file for you. You can see raw text by clicking the +Raw+
button. 

It will also render most programming languages in a way that
programmers will be used to seeing them in their editors. So keywords
will be highlighted and so on.

If you want to make a simple edit to a file in a GitHub repository and
do not wish to clone it to your local computer, edit the file and push
the result back up. You can use the +Edit+ button make a change and
then commit it to the repository directly from the web page. This is
not the best way to write code, it is very useful if you want to do
something simple like fix a typo in a comment.

If you want to know where each line of text comes from click the
+Blame+ button which will show the file with the commit
information. So that for each chunk of text you can see who committed
it most recently and when.

The +History+ button will allow you to see a chronological view of the
commits to a file.  

==== Pricing

GitHub is a business and of course it costs money to run, so it
should come as no shock that they charge for hosting. In order to
build community public projects, like this ebook, are hosted for
free. However private projects cost money to create. Bitbucket's plans
are priced by number of repositories. For details of what plans are
available look at link:http://github.com/settings/billing[GitHub
Billing] which will contain the current information. 

At the time of this writing GitHub charges $7 a month for up to five
repositories. If that is not enough then there are a number of plans
that range up to $50/month for 50 repositories. (If you need more
contact them). 

NOTE: Prices are correct as of when this was written. They may change
in the future.

==== GitHub Enterprise 

If you are a a larger company and wish to have your source code behind
your firewall then using the GitHub.com site will not work for
you. The problem is that you may wish to have the same features as the
public GitHub, including the API, and all the user interfaces of
GitHub.com .

The GitHub folks have a plan to help you in this case in *GitHub
Enterprise*. This is a commercial software that runs as a virtual
machine on your network. This supports a number of popular
virtualization technologies including VMware and IBM Power.

GitHub Enterprise costs $21/user/month, but user licenses come in
blocks of 20. So expect to pay $5,000 per year at a minimum to use
this software. 

=== Bitbucket

In some ways Bitbucket is a clone of GitHub, however it has a few
options that GitHub lacks. First of all it support HG in addition to
GIT so if your team wishes to use HG it is a strong possibility. In
addition while GitHub offers free public repositories it does require
you to pay for private ones. With Bitbucket you can have as many
private repos as you want, however you can only share them with up to
five other people before you have to pay for hosting. In addition
Bitbucket allows unlimited repos with all plans but limits how many
people you can share with. If you don't need community or to share
with more than a few people Bitbucket can be a good option. For the
case of a lone developer who just wants off site backups this can be a
good option.


==== Features


==== Pricing

Unlike GitHub, Bitbucket charges you not by how many repositories you
have but based on how many people you wish to share them with. If you
wish to share you're repositories with five other people or less,
total. Then you can use their free account. If you want to share with
more than 5 people they have a plans that start at $10/month for up to
10 users and run up to $200/month for an unlimited number of users. 

NOTE: Prices are correct as of when this was written. They may change
in the future.

If you are a student you might be eligible for a free unlimited
account. 

==== Stash - Enterprise Bitbucket

There are of course other git and hg hosting repositories out there,
and you can find them via a google search easily enough. Of course you
can also host your own git repo on your own server, which could be
internal to your office or on a co-located or cloud host. 










